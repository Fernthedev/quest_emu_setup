name: CI Build & Release

permissions:
  contents: write

on:
  push:
    # Run on version tags like v1.2.3 and on any branch commits
    branches:
      - "master"
      - "main"
    tags:
      - "v*"
  pull_request:
    branches:
      - "master"
      - "main"

jobs:
  build:
    name: Build ${{ matrix.os_name }}
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - runner: ubuntu-latest
            os_name: linux-x64
            ext: ""
          - runner: macos-latest
            os_name: macos-arm64
            ext: ""
          - runner: windows-latest
            os_name: windows-x64
            ext: .exe

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: clippy

      - name: Ensure rust toolchain
        run: |
          rustup default stable

      - name: Build (release)
        run: |
          # Build with the host's default toolchain (native build)
          cargo build --release
          ls ./target/release
          mv target/release/quest_emu${{ matrix.ext }} ./quest_emu-${{ matrix.os_name }}${{ matrix.ext }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: quest_emu-${{ matrix.os_name }}${{ matrix.ext }}
          path: quest_emu-${{ matrix.os_name }}${{ matrix.ext }}
          if-no-files-found: error

  create_release:
    name: Create Release and Upload Assets
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: List downloaded artifacts (debug)
        run: |
          echo "Listing artifacts dir"
          ls -R artifacts || true

      - name: Release Artifact Upload
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: artifacts/**/*
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}